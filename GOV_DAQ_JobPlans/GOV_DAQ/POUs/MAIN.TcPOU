<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{b45f44f8-b7f4-49fc-b40d-1c4181623575}" SpecialFunc="None">
    <Declaration><![CDATA[(*
GOV Differential Pressure Testing
Document reference: Ux Governor Differential Pressure Testing
Purpose: (1) Takes 4-20mA as an input and scales to output a %Position assuming a linear relationship
		 (2) Converts 0-10V signal from two 3000 PSIG pressure transducers and reports it's pressure
		 
		 => Purpose of Test: Timing test to see how long it takes for WG to open & close.

Inputs: (1) Servo-motor position indicator 4-20mA innput to EL3114
		(2) Two 0-10 V inputs to EL3104

Outputs: No physical outputs. DAQ acquires data, processes it, and displays it as scope data. 
		 Users can may optionally use analytics tooling available in TwinCAT 3. Otherwise, data
		 can be exported as a .CSV file for analysis/record purposes in programs such as Excel or
		 MATLAB.

Notes:
(1) There is some fixed error in the calculation - 100% is may never be reached, but we get close ~99.9%!
(2) There are overcurrent protections (fuses) but no external overvoltage protections. Please double check
	the EL3104 will not be damaged with max input voltage of proccess variable being measured (card 
	can handle max. 10V)

*)

PROGRAM MAIN
VAR
	pressureTransOne : PressureTransducer_3000PSIG;									   
	pressureTransTwo : PressureTransducer_3000PSIG;
	wicketGateServo : ServoPosition_SetPoint;
	
	rOutputPressure01 : REAL;
	rOutputPressure02 : REAL;
	rOutoutPercentPosition : REAL;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Init & Calibration step - currently left to default values (See FB definition for more details)
pressureTransOne(nDAQ_inputVoltage:=GVL.nVoltage_Input1, rStartValInput_EU:=0, nStartValInput:=0);
pressureTransTwo(nDAQ_inputVoltage:=GVL.nVoltage_Input2, rStartValInput_EU:=0, nStartValInput:=0);
wicketGateServo(rStartValInput_EU := 0, nStartValInput := 0);

rOutputPressure01 := pressureTransOne.PressureReading();
rOutputPressure02 := pressureTransTwo.PressureReading();
rOutoutPercentPosition := wicketGateServo.PercentPosition();]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>